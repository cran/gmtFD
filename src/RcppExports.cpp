// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// gr_cov_cpp
List gr_cov_cpp(std::vector<List> x, List gr_means, int kk, int pp, int ntp, NumericVector n_vec);
RcppExport SEXP _gmtFD_gr_cov_cpp(SEXP xSEXP, SEXP gr_meansSEXP, SEXP kkSEXP, SEXP ppSEXP, SEXP ntpSEXP, SEXP n_vecSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<List> >::type x(xSEXP);
    Rcpp::traits::input_parameter< List >::type gr_means(gr_meansSEXP);
    Rcpp::traits::input_parameter< int >::type kk(kkSEXP);
    Rcpp::traits::input_parameter< int >::type pp(ppSEXP);
    Rcpp::traits::input_parameter< int >::type ntp(ntpSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type n_vec(n_vecSEXP);
    rcpp_result_gen = Rcpp::wrap(gr_cov_cpp(x, gr_means, kk, pp, ntp, n_vec));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gmtFD_gr_cov_cpp", (DL_FUNC) &_gmtFD_gr_cov_cpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_gmtFD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
